from aiogram import Router, F
from aiogram.types import Message, PreCheckoutQuery, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
import asyncio

from services.payment_service import create_invoice, process_successful_payment

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
@router.pre_checkout_query()
async def pre_checkout_query_handler(pre_checkout_query: PreCheckoutQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    Telegram —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ pre_checkout_query
    """
    await pre_checkout_query.answer(ok=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
@router.message(F.successful_payment)
async def successful_payment_handler(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    """
    payment = message.successful_payment
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
    await message.answer(
        f"‚úÖ *–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!*\n\n"
        f"–°—É–º–º–∞: {payment.total_amount / 100} Stars\n"
        f"ID –ø–ª–∞—Ç–µ–∂–∞: {payment.telegram_payment_charge_id[:10]}...\n\n"
        f"–ù–∞—á–∏–Ω–∞—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –≤–∞—à–µ–≥–æ –≥–∞–¥–∞–Ω–∏—è...",
        parse_mode="Markdown"
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
    await process_successful_payment(
        message, 
        payment.total_amount, 
        payment.invoice_payload,
        payment.telegram_payment_charge_id
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–∞–¥–∞–Ω–∏–µ
    from handlers.tarot_handlers import show_tarot_animation, generate_tarot_reading
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π —Ä–∞—Å–∫–ª–∞–¥–∞
    await show_tarot_animation(message)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–∞–¥–∞–Ω–∏—è
    await message.answer('<b>üîÆ –ù–∞—á–∏–Ω–∞—é –≥–∞–¥–∞–Ω–∏–µ...</b>', parse_mode="HTML")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–∞–¥–∞–Ω–∏–µ
    reading = generate_tarot_reading()
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(2)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç
    shuffling_msg = await message.answer('<b>üÉè –ü–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>', parse_mode="HTML")
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞: {reading['cards'][0]['name']}</b>\n\n"
        f"{reading['cards'][0]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][0]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–æ–π
    await shuffling_msg.edit_text('<b>üÉè –°–Ω–æ–≤–∞ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>', parse_mode="HTML")
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –í—Ç–æ—Ä–∞—è –∫–∞—Ä—Ç–∞: {reading['cards'][1]['name']}</b>\n\n"
        f"{reading['cards'][1]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][1]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ä—Ç–æ–π
    await shuffling_msg.edit_text('<b>üÉè –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>', parse_mode="HTML")
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–µ—Ç—å—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –¢—Ä–µ—Ç—å—è –∫–∞—Ä—Ç–∞: {reading['cards'][2]['name']}</b>\n\n"
        f"{reading['cards'][2]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][2]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –≤–µ—Ä–¥–∏–∫—Ç–∞
    await shuffling_msg.edit_text('<b>‚ú® –ü–æ–¥–¥–∞—é—Å—å –Ω–µ–±–µ—Å–∞–º –∏ –≥–æ—Ç–æ–≤–ª—é –≤–µ—Ä–¥–∏–∫—Ç...</b>', parse_mode="HTML")
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –≤–µ—Ä–¥–∏–∫—Ç–æ–º
    await asyncio.sleep(4)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
    await message.answer(
        f"<b>üîÆ –û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:</b>\n\n{reading['summary']}\n\n"
        f"<b>üç∏ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫:</b>\n"
        f"{reading['recommended_drink']}",
        parse_mode="HTML"
    )