from aiogram import Router, F
from aiogram.types import Message, PreCheckoutQuery, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import asyncio
import re

from services.payment_service import create_invoice, process_successful_payment

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class PaymentStates(StatesGroup):
    waiting_for_birthdate = State()

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π
router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
@router.pre_checkout_query()
async def pre_checkout_query_handler(pre_checkout_query: PreCheckoutQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    Telegram —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ pre_checkout_query
    """
    await pre_checkout_query.answer(ok=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
@router.message(F.successful_payment)
async def successful_payment_handler(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    """
    payment = message.successful_payment
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
    await message.answer(
        f"‚úÖ *–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞!*\n\n"
        f"–°—É–º–º–∞: {payment.total_amount / 100} Stars\n"
        f"ID –ø–ª–∞—Ç–µ–∂–∞: {payment.telegram_payment_charge_id[:10]}...\n\n"
        f"–ù–∞—á–∏–Ω–∞—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –≤–∞—à–µ–≥–æ –≥–∞–¥–∞–Ω–∏—è...",
        parse_mode="Markdown"
    )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂
    await process_successful_payment(
        message, 
        payment.total_amount, 
        payment.invoice_payload,
        payment.telegram_payment_charge_id
    )
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    from handlers.tarot_handlers import show_premium_reading_with_animation
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    birthdate = user_data.get('birthdate', None)
    
    # –ï—Å–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ—ë —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not birthdate:
        await message.answer(
            "<b>üîÆ –î–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è –º–Ω–µ –Ω—É–∂–Ω–∞ –≤–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è.</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.1990)",
            parse_mode="HTML"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
        await state.set_state(PaymentStates.waiting_for_birthdate)
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è
    await show_premium_reading_with_animation(message, birthdate)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
@router.message(StateFilter(PaymentStates.waiting_for_birthdate))
async def process_birthdate_after_payment(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    birthdate = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì)
    if not re.match(r'^\d{2}\.\d{2}\.\d{4}$', birthdate):
        await message.answer(
            "<b>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã.</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 01.01.1990)",
            parse_mode="HTML"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(birthdate=birthdate)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–∞–¥–∞–Ω–∏—è
    await message.answer(
        "<b>‚úÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
        "–ù–∞—á–∏–Ω–∞—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–π –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è...",
        parse_mode="HTML"
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è
    await show_premium_reading_with_animation(message, birthdate)

# –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –≤–µ—Ä–¥–∏–∫—Ç–∞
    await shuffling_msg.edit_text('<b>‚ú® –ü–æ–¥–¥–∞—é—Å—å –Ω–µ–±–µ—Å–∞–º –∏ –≥–æ—Ç–æ–≤–ª—é –≤–µ—Ä–¥–∏–∫—Ç...</b>', parse_mode="HTML")
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –≤–µ—Ä–¥–∏–∫—Ç–æ–º
    await asyncio.sleep(4)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
    await message.answer(
        f"<b>üîÆ –û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:</b>\n\n{reading['summary']}\n\n"
        f"<b>üç∏ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫:</b>\n"
        f"{reading['recommended_drink']}",
        parse_mode="HTML"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    builder.button(text="üîÆ –°–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥", callback_data="start_reading")
    builder.button(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="return_to_menu")
    builder.adjust(1)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    
    await message.answer(
        "–•–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é?",
        reply_markup=builder.as_markup()
    )