import json
import asyncio
import random
import datetime
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, LabeledPrice
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from openai import OpenAI
from services.payment_service import create_invoice

# –ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è
class PremiumReadingStates(StatesGroup):
    waiting_for_birthdate = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
client = OpenAI()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—Ä–æ–º–ø—Ç–æ–≤
PROMPT_TAROT_CARDS = "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 3 —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º, –∫—Ä–∞—Ç–∫–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π. –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON: [{\"id\":..., \"name\":..., \"description\":..., \"short_meaning\":..., \"drunk_interpretation\":...}]"
PROMPT_TAROT_MESSAGE = "–¢—ã - –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–∞—Ä–æ–ª–æ–≥ —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤) –æ —Ç–æ–º, —á—Ç–æ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –î–æ–±–∞–≤—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è –∏ —à—É—Ç–æ—á–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é."

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞ –¢–∞—Ä–æ —á–µ—Ä–µ–∑ ChatGPT
PROMPT_TAROT_READING = """–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ –∏–∑ 3 –∫–∞—Ä—Ç —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π. 
–†–∞—Å–∫–ª–∞–¥ –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å:
1. –¢—Ä–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π
2. –û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞
3. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞—Å–∫–ª–∞–¥—É

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "cards": [
    {"name": "...", "description": "...", "drunk_interpretation": "..."},
    {"name": "...", "description": "...", "drunk_interpretation": "..."},
    {"name": "...", "description": "...", "drunk_interpretation": "..."}
  ],
  "summary": "...",
  "recommended_drink": "..."
}"""

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞ —Å —É—á–µ—Ç–æ–º –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
PROMPT_PREMIUM_READING = """–¢—ã - –æ–ø—ã—Ç–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–º —É–∫–ª–æ–Ω–æ–º. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–¥–µ–ª–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞, —Ä–æ–¥–∏–≤—à–µ–≥–æ—Å—è {birthdate}, —É—á–∏—Ç—ã–≤–∞—è —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É {current_date}.

–°–¥–µ–ª–∞–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 5 –∫–∞—Ä—Ç –¢–∞—Ä–æ, —É—á–∏—Ç—ã–≤–∞—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏ –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã.
–î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã –¥–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é.

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ —Å —ç—Ç–æ–π –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è, –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –Ω–∞–ø–∏—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç —ç—Ç–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "cards": [
    {
      "name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã",
      "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã",
      "drunk_interpretation": "–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è"
    },
    ...
  ],
  "personal_summary": "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ —Å —ç—Ç–æ–π –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è",
  "astrological_comment": "–ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
  "recommended_drink": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫"
}
"""

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è
PROMPT_TEST_READING = """–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–µ—Å—Ç–æ–≤–æ–µ –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ –¢–∞—Ä–æ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π.
–í–∫–ª—é—á–∏:
1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ
2. –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
3. –ê–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –∫–∞—Ä—Ç—ã
4. –ö–æ—Ä–æ—Ç–∫–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞ (—Å —é–º–æ—Ä–æ–º –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π)

–í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{
  "card_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã",
  "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è",
  "drunk_interpretation": "–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è",
  "tarot_message": "–ü–æ—Å–ª–∞–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞"
}"""

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI API
async def generate_openai_response(prompt, model="gpt-3.5-turbo", temperature=0.7, max_tokens=500):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç OpenAI API
    
    Args:
        prompt: –¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞
        model: –ú–æ–¥–µ–ª—å OpenAI
        temperature: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        max_tokens: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤
        
    Returns:
        –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI API
    """
    try:
        response = await asyncio.to_thread(
            client.chat.completions.create,
            model=model,
            messages=[{"role": "system", "content": prompt}],
            temperature=temperature,
            max_tokens=max_tokens
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI API: {e}")
        return None

# –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥
FREE_USERS = [869218484, ]  #218484013 ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –≥–∞–¥–∞–Ω–∏—è
router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å"
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    builder.button(text="üîÆ –ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å", callback_data="start_reading")
    builder.adjust(1)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        "üîÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—å—è–Ω–æ–µ –¢–∞—Ä–æ!</b> üç∏\n\n"
        "–Ø - –±–æ—Ç-—Ç–∞—Ä–æ–ª–æ–≥ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–º —É–∫–ª–æ–Ω–æ–º. –Ø –º–æ–≥—É –ø–æ–≥–∞–¥–∞—Ç—å –≤–∞–º –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ "
        "–∏ –¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≥–∞–¥–∞–Ω–∏–µ:",
        parse_mode="HTML",
        reply_markup=builder.as_markup()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å"
@router.callback_query(F.data == "start_reading")
async def start_tarot_reading(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å'"""
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
    await callback.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_id = callback.from_user.id
    if user_id in FREE_USERS:
        # –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Å–ø–∏—Å–∫–∞ - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ —á–µ—Ä–µ–∑ GPT
        await callback.message.answer(
            "üîÆ *–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –¢–∞—Ä–æ* üîÆ\n\n"
            "–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –≤–∞—à –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥...",
            parse_mode="Markdown"
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π —Ä–∞—Å–∫–ª–∞–¥–∞
        await show_tarot_animation(callback.message)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ —á–µ—Ä–µ–∑ GPT
        reading = await generate_tarot_reading()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–∞–¥–∞–Ω–∏—è
        await callback.message.answer('üîÆ *–í–∞—à —Ä–∞—Å–∫–ª–∞–¥ –≥–æ—Ç–æ–≤!* üç∏\n\n–í–æ—Ç —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –∫–∞—Ä—Ç—ã:', parse_mode="Markdown")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ä—Ç—É —Å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π
        for card in reading['cards']:
            await callback.message.answer(
                f"üÉè *{card['name']}*\n\n"
                f"{card['description']}\n\n"
                f"üç∏ *–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:*\n{card['drunk_interpretation']}",
                parse_mode="Markdown"
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
        await callback.message.answer(
            f"üîÆ *–û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ:*\n\n{reading['summary']}\n\n"
            f"üç∏ *–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫:*\n"
            f"{reading['recommended_drink']}",
            parse_mode="Markdown"
        )
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞ —á–µ—Ä–µ–∑ ChatGPT
        tarot_message = await generate_tarot_message()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞
        await callback.message.answer(
            f"‚ú® *–ü–æ—Å–ª–∞–Ω–∏–µ —Ç–∞—Ä–æ–ª–æ–≥–∞:*\n\n{tarot_message}",
            parse_mode="Markdown"
        )
    else:
        # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–ø—Ä—è–º—É—é –∑–¥–µ—Å—å
        from aiogram.utils.keyboard import InlineKeyboardBuilder
        builder = InlineKeyboardBuilder()
        builder.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 100 Stars", callback_data="pay_reading")
        builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_reading")
        builder.adjust(1)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–∞–¥–∞–Ω–∏—è
        await callback.message.answer(
            "üîÆ *–ü—å—è–Ω–æ–µ –¢–∞—Ä–æ* üç∏\n\n"
            "–Ø –ø—Ä–æ–≤–µ–¥—É –¥–ª—è –≤–∞—Å –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π!\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–∞–¥–∞–Ω–∏—è: 100 Stars.\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ.",
            parse_mode="Markdown",
            reply_markup=builder.as_markup()
        )

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
def create_keyboard(buttons):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    
    Args:
        buttons: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (—Ç–µ–∫—Å—Ç, callback_data)
    
    Returns:
        –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    for text, callback_data in buttons:
        builder.button(text=text, callback_data=callback_data)
    builder.adjust(1)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
def create_payment_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø–ª–∞—Ç—ã –∏ –æ—Ç–º–µ–Ω—ã"""
    buttons = [
        ("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 100 Stars", "pay_reading"),
        ("‚ùå –û—Ç–º–µ–Ω–∞", "cancel_reading")
    ]
    return create_keyboard(buttons)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏—è
def create_premium_payment_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–º–∏—É–º –∏ –æ—Ç–º–µ–Ω—ã"""
    buttons = [
        ("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 300 Stars", "pay_premium_reading"),
        ("‚ùå –û—Ç–º–µ–Ω–∞", "cancel_reading")
    ]
    return create_keyboard(buttons)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –≥–∞–¥–∞–Ω–∏—è
def create_start_reading_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞—á–∞–ª–∞ –≥–∞–¥–∞–Ω–∏—è"""
    buttons = [("üîÆ –ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å", "start_reading")]
    return create_keyboard(buttons)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å"
@router.callback_query(F.data == "pay_reading")
async def pay_tarot_reading(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∏—Ç—å'"""
    await callback.answer()
    try:
        bot = callback.bot
        await bot.send_invoice(
            chat_id=callback.message.chat.id,
            title="–ü—å—è–Ω–æ–µ –¢–∞—Ä–æ - –ì–∞–¥–∞–Ω–∏–µ",
            description="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 3 –∫–∞—Ä—Ç —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π",
            payload="tarot_reading",
            provider_token="",  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è Telegram Stars
            currency="XTR",
            prices=[
                LabeledPrice(
                    label="–ì–∞–¥–∞–Ω–∏–µ –Ω–∞ –¢–∞—Ä–æ",
                    amount=100  # 100 Stars
                )
            ],
            start_parameter="tarot_reading",
            need_name=False,
            need_phone_number=False,
            need_email=False,
            need_shipping_address=False,
            is_flexible=False,
            protect_content=False
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞: {e}")
        await callback.message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="Markdown"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
@router.callback_query(F.data == "cancel_reading")
async def cancel_tarot_reading(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û—Ç–º–µ–Ω–∞'"""
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
    await callback.answer()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
    await callback.message.answer(
        "‚ùå –ì–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å–Ω–æ–≤–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å –≥–∞–¥–∞–Ω–∏–µ"
@router.callback_query(F.data == "order_reading")
async def order_tarot_reading(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ó–∞–∫–∞–∑–∞—Ç—å –≥–∞–¥–∞–Ω–∏–µ'"""
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
    await callback.answer()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è
    await callback.message.answer(
        "üí∞ *–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ* üí∞\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π.\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è: 300 Stars.\n\n"
        "–ì–∞–¥–∞–Ω–∏–µ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 5 –∫–∞—Ä—Ç –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.",
        parse_mode="Markdown",
        reply_markup=create_premium_payment_keyboard()
    )

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏—è
def create_premium_payment_keyboard():
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    builder.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 300 Stars", callback_data="pay_premium_reading")
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_reading")
    return builder.as_markup()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–µ–º–∏—É–º"
@router.callback_query(F.data == "pay_premium_reading")
async def pay_premium_tarot_reading(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–µ–º–∏—É–º'"""
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
    await callback.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_id = callback.from_user.id
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
    await callback.message.answer(
        "üîÆ *–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ* üîÆ\n\n"
        "–î–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15.05.1990).",
        parse_mode="Markdown"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    await state.set_state(PremiumReadingStates.waiting_for_birthdate)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º
    await state.update_data(is_free_user=(user_id in FREE_USERS))
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ FREE_USERS, –Ω–µ —Å–æ–∑–¥–∞–µ–º —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã
    if user_id in FREE_USERS:
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ callback
    # –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç —Å –±–æ–ª—å—à–µ–π —Å—É–º–º–æ–π –∏ –¥—Ä—É–≥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º
    result = await create_invoice(
        callback.bot, 
        callback.message.chat.id, 
        amount=300,  # 300 Stars
        title="–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ",
        description="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 5 –∫–∞—Ä—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏"
    )
    
    if not result:
        await callback.message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="Markdown"
        )

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ —Å–ø–∏—Å–∫–µ FREE_USERS –ø–æ–ª—É—á–∞—é—Ç –ø–æ–ª–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –±–µ–∑ –æ–ø–ª–∞—Ç—ã

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–¢–µ—Å—Ç"
@router.callback_query(F.data == "test_reading")
async def test_tarot_reading(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–¢–µ—Å—Ç'"""
    await callback.answer()
    
    # –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –≥–∞–¥–∞–Ω–∏–µ
    await callback.message.answer(
        "üß™ *–¢–µ—Å—Ç–æ–≤–æ–µ –≥–∞–¥–∞–Ω–∏–µ* üß™\n\n"
        "–≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –¥–µ–º–æ-–≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ.\n"
        "–í—ã –ø–æ–ª—É—á–∏—Ç–µ –±–∞–∑–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π.\n\n"
        "–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –≤–∞—à—É –∫–∞—Ä—Ç—É..."
    )
    await show_tarot_animation(callback.message)
    
    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≥–∞–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–µ—Ä–µ–∑ ChatGPT
        prompt = """–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–µ—Å—Ç–æ–≤–æ–µ –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ –¢–∞—Ä–æ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π.
        –í–∫–ª—é—á–∏:
        1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ
        2. –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
        3. –ê–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –∫–∞—Ä—Ç—ã
        4. –ö–æ—Ä–æ—Ç–∫–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞ (—Å —é–º–æ—Ä–æ–º –∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–æ–π)
        
        –í–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
        {
          "card_name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã",
          "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è",
          "drunk_interpretation": "–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è",
          "tarot_message": "–ü–æ—Å–ª–∞–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞"
        }"""
        
        response = await asyncio.to_thread(
            client.chat.completions.create,
            model="gpt-3.5-turbo",
            messages=[{"role": "system", "content": prompt}],
            temperature=0.7,
            max_tokens=500
        )
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        reading_text = response.choices[0].message.content
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            reading_data = json.loads(reading_text)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≥–∞–¥–∞–Ω–∏—è
            await callback.message.answer(
                f"üÉè *{reading_data['card_name']}*\n\n"
                f"{reading_data['description']}\n\n"
                f"üç∏ *–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:*\n{reading_data['drunk_interpretation']}",
                parse_mode="Markdown"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞
            await callback.message.answer(
                f"‚ú® *–ü–æ—Å–ª–∞–Ω–∏–µ —Ç–∞—Ä–æ–ª–æ–≥–∞:*\n\n{reading_data['tarot_message']}",
                parse_mode="Markdown"
            )
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞—á–∞—Ç—å –ø–æ–ª–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ
            from aiogram.utils.keyboard import InlineKeyboardBuilder
            builder = InlineKeyboardBuilder()
            builder.button(text="üîÆ –ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å", callback_data="start_reading")
            builder.adjust(1)
            await callback.message.answer(
                "–≠—Ç–æ –±—ã–ª–æ –¥–µ–º–æ-–≥–∞–¥–∞–Ω–∏–µ. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞ –∏–∑ 3 –∫–∞—Ä—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π –Ω–∞–ø–∏—Ç–∫–∞, "
                "–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                parse_mode="Markdown",
                reply_markup=builder.as_markup()
            )
            
        except (json.JSONDecodeError, KeyError) as e:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–ª–∏ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ –∫–ª—é—á–∏
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON –≤ test_tarot_reading: {e}")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            fallback_card = {
                "card_name": "–®—É—Ç",
                "description": "–ö–∞—Ä—Ç–∞ –®—É—Ç–∞ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è, —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ—Å—Ç—å –∏ —Å–≤–æ–±–æ–¥—É.",
                "drunk_interpretation": "–°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –Ω–µ–º–Ω–æ–≥–æ –±–µ–∑—Ä–∞—Å—Å—É–¥–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ, –Ω–æ –Ω–µ –ø–µ—Ä–µ—É—Å–µ—Ä–¥—Å—Ç–≤—É–π—Ç–µ —Å –∞–ª–∫–æ–≥–æ–ª–µ–º!",
                "tarot_message": "–ó–≤–µ–∑–¥—ã –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–∫—Ç–µ–π–ª—å –∏–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –Ω–µ–æ–±—ã—á–Ω–æ–º –º–µ—Å—Ç–µ."
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∑–∞–ø–∞—Å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            await callback.message.answer(
                f"üÉè *{fallback_card['card_name']}*\n\n"
                f"{fallback_card['description']}\n\n"
                f"üç∏ *–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:*\n{fallback_card['drunk_interpretation']}",
                parse_mode="Markdown"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞
            await callback.message.answer(
                f"‚ú® *–ü–æ—Å–ª–∞–Ω–∏–µ —Ç–∞—Ä–æ–ª–æ–≥–∞:*\n\n{fallback_card['tarot_message']}",
                parse_mode="Markdown"
            )
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞—á–∞—Ç—å –ø–æ–ª–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ
            from aiogram.utils.keyboard import InlineKeyboardBuilder
            builder = InlineKeyboardBuilder()
            builder.button(text="üîÆ –ù–∞—á–∞—Ç—å –≥–∞–¥–∞—Ç—å", callback_data="start_reading")
            builder.adjust(1)
            await callback.message.answer(
                "–≠—Ç–æ –±—ã–ª–æ –¥–µ–º–æ-–≥–∞–¥–∞–Ω–∏–µ. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞ –∏–∑ 3 –∫–∞—Ä—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π –Ω–∞–ø–∏—Ç–∫–∞, "
                "–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
                parse_mode="Markdown",
                reply_markup=builder.as_markup()
            )
    
    except Exception as e:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏
        print(f"–û—à–∏–±–∫–∞ –≤ test_tarot_reading: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await callback.message.answer(
            "üòî *–£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...*\n\n"
            "–ö–∞—Ä—Ç—ã –¢–∞—Ä–æ —Å–µ–≥–æ–¥–Ω—è –∫–∞–ø—Ä–∏–∑–Ω–∏—á–∞—é—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
            parse_mode="Markdown"
        )


# –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞–ø–∏—Ç–∫–∏
recommended_drinks = [
    "–í–∏—Å–∫–∏ —Å –∫–æ–ª–æ–π - –∫–ª–∞—Å—Å–∏–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–≤–æ–¥–∏—Ç!",
    "–ú–æ—Ö–∏—Ç–æ - –æ—Å–≤–µ–∂–∞—é—â–∏–π –≤—ã–±–æ—Ä –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.",
    "–ö—Ä–æ–≤–∞–≤–∞—è –ú—ç—Ä–∏ - –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π.",
    "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ - —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏.",
    "–ü–∏–Ω–∞ –ö–æ–ª–∞–¥–∞ - —Å–ª–∞–¥–∫–∏–π –≤–∫—É—Å —É—Å–ø–µ—Ö–∞ –∂–¥–µ—Ç –≤–∞—Å!"
]

@router.message(Command("reading"))
async def cmd_reading(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reading"""
    await message.answer(
        "üîÆ *–ü—å—è–Ω–æ–µ –¢–∞—Ä–æ* üç∏\n\n"
        "–Ø –ø—Ä–æ–≤–µ–¥—É –¥–ª—è –≤–∞—Å –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ —Å –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–µ–π!\n"
        "–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–∞–¥–∞–Ω–∏—è: 100 Stars.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å –≥–∞–¥–∞–Ω–∏–µ.",
        parse_mode="Markdown"
    )
    
    # –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã
    from aiogram import Bot
    bot = Bot.get_current()
    await create_invoice(bot, message.chat.id)

async def show_tarot_animation(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∏ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç"""
    await message.answer("üîÆ –ü–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...")
    await asyncio.sleep(1)
    await message.answer("üÉè –í—ã–±–∏—Ä–∞—é –∫–∞—Ä—Ç—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞—Å–∫–ª–∞–¥–∞...")
    await asyncio.sleep(1)
    await message.answer("‚ú® –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å –Ω–∞ –≤–∞—à—É —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫—É...")
    await asyncio.sleep(1)
    await message.answer("üç∏ –î–æ–±–∞–≤–ª—è—é –∞–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...")
    await asyncio.sleep(1)

async def generate_tarot_reading():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –¢–∞—Ä–æ —á–µ—Ä–µ–∑ GPT"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ GPT
        tarot_cards = await fetch_tarot_cards_gpt()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ tarot_cards —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏ –æ–Ω –Ω–µ –ø—É—Å—Ç–æ–π
        if not isinstance(tarot_cards, list) or len(tarot_cards) == 0:
            # –ï—Å–ª–∏ –∫–∞—Ä—Ç—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ GPT
            prompt = """–°–æ–∑–¥–∞–π –ø–æ–ª–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ –Ω–∞ –¢–∞—Ä–æ —Å —Ç—Ä–µ–º—è –∫–∞—Ä—Ç–∞–º–∏. –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç—ã —É–∫–∞–∂–∏:
1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
2. –û–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≥–∞–¥–∞–Ω–∏—è
3. –ê–ª–∫–æ–≥–æ–ª—å–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é (—é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫—É—é)

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫.
–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∏–¥–µ JSON:
{
  "cards": [
    {
      "name": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã",
      "description": "–û–ø–∏—Å–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è",
      "drunk_interpretation": "–ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è"
    },
    ...
  ],
  "summary": "–û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞",
  "recommended_drink": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫"
}"""
            
            response = await asyncio.to_thread(
                client.chat.completions.create,
                model="gpt-3.5-turbo",
                messages=[{"role": "system", "content": prompt}],
                temperature=0.7,
                max_tokens=1000
            )
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
                reading_text = response.choices[0].message.content
                reading = json.loads(reading_text)
                return reading
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞ GPT: {e}")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–∞—Ä—Ç—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
                fallback_cards = [
                    {"name": "–®—É—Ç", "description": "–ù–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "drunk_interpretation": "–í—Ä–µ–º—è –¥–ª—è —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ –≤–µ—Å–µ–ª—å—è!"},
                    {"name": "–ú–∞–≥", "description": "–°–∏–ª–∞ –≤–æ–ª–∏ –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è —ç–Ω–µ—Ä–≥–∏—è–º–∏", "drunk_interpretation": "–í–∞—à–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è —Å –∫–∞–∂–¥—ã–º –±–æ–∫–∞–ª–æ–º!"},
                    {"name": "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞", "description": "–ò–Ω—Ç—É–∏—Ü–∏—è –∏ —Ç–∞–π–Ω—ã–µ –∑–Ω–∞–Ω–∏—è", "drunk_interpretation": "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —à–æ—Ç–∞!"}
                ]
                return {
                    "cards": fallback_cards,
                    "summary": "–í–∞—à–∏ –∫–∞—Ä—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –∂–∏–∑–Ω–∏. –î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º.",
                    "recommended_drink": "–í–∏—Å–∫–∏ —Å –∫–æ–ª–æ–π - –∫–ª–∞—Å—Å–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç."
                }
        else:
            # –ï—Å–ª–∏ –∫–∞—Ä—Ç –º–µ–Ω—å—à–µ 3, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è
            if len(tarot_cards) < 3:
                selected_cards = tarot_cards
            else:
                selected_cards = random.sample(tarot_cards, 3)
    
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ GPT
        cards_info = ", ".join([card["name"] for card in selected_cards])
        prompt = f"""–ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–∞—Ä—Ç –¢–∞—Ä–æ —Å–æ–∑–¥–∞–π –æ–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫:
–ö–∞—Ä—Ç—ã: {cards_info}

–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:
1. –û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
2. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫ —Å –∫—Ä–∞—Ç–∫–∏–º —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∏–¥–µ JSON:
{{
  "summary": "–û–±—â–µ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫–ª–∞–¥–∞",
  "recommended_drink": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º"
}}"""
    
        try:
            response = await asyncio.to_thread(
                client.chat.completions.create,
                model="gpt-3.5-turbo",
                messages=[{"role": "system", "content": prompt}],
                temperature=0.7,
                max_tokens=300
            )
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            interpretation_text = response.choices[0].message.content
            interpretation = json.loads(interpretation_text)
            
            return {
                "cards": selected_cards,
                "summary": interpretation.get("summary", "–í–∞—à–∏ –∫–∞—Ä—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –∂–∏–∑–Ω–∏."),
                "recommended_drink": interpretation.get("recommended_drink", "–í–∏—Å–∫–∏ —Å –∫–æ–ª–æ–π - –∫–ª–∞—Å—Å–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç.")
            }
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ GPT: {e}")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return {
                "cards": selected_cards,
                "summary": "–í–∞—à–∏ –∫–∞—Ä—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –∂–∏–∑–Ω–∏. –î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º.",
                "recommended_drink": "–í–∏—Å–∫–∏ —Å –∫–æ–ª–æ–π - –∫–ª–∞—Å—Å–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç."
            }
    except Exception as e:
        print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–∞–¥–∞–Ω–∏—è: {e}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–∞—Ä—Ç—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        fallback_cards = [
            {"name": "–®—É—Ç", "description": "–ù–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "drunk_interpretation": "–í—Ä–µ–º—è –¥–ª—è —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ –≤–µ—Å–µ–ª—å—è!"},
            {"name": "–ú–∞–≥", "description": "–°–∏–ª–∞ –≤–æ–ª–∏ –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è —ç–Ω–µ—Ä–≥–∏—è–º–∏", "drunk_interpretation": "–í–∞—à–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —É—Å–∏–ª–∏–≤–∞—é—Ç—Å—è —Å –∫–∞–∂–¥—ã–º –±–æ–∫–∞–ª–æ–º!"},
            {"name": "–í–µ—Ä—Ö–æ–≤–Ω–∞—è –ñ—Ä–∏—Ü–∞", "description": "–ò–Ω—Ç—É–∏—Ü–∏—è –∏ —Ç–∞–π–Ω—ã–µ –∑–Ω–∞–Ω–∏—è", "drunk_interpretation": "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –≥–æ–ª–æ—Å—É, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —à–æ—Ç–∞!"}
        ]
        return {
            "cards": fallback_cards,
            "summary": "–í–∞—à–∏ –∫–∞—Ä—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤ –∂–∏–∑–Ω–∏. –î–æ–≤–µ—Ä—è–π—Ç–µ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ –∏ –±—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º.",
            "recommended_drink": "–í–∏—Å–∫–∏ —Å –∫–æ–ª–æ–π - –∫–ª–∞—Å—Å–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç."
        }

async def generate_tarot_message():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–∞—Ä–æ–ª–æ–≥–∞ —á–µ—Ä–µ–∑ ChatGPT API"""
    try:
        response = await asyncio.to_thread(
                client.chat.completions.create,
                model="gpt-3.5-turbo",
                messages=[{"role": "system", "content": PROMPT_TAROT_MESSAGE}],
                temperature=0.7,
                max_tokens=200
            )
        return response.choices[0].message.content
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ GPT: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        return "–ö–∞—Ä—Ç—ã –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ –≤–∞–º —Å—Ç–æ–∏—Ç –≤—ã–ø–∏—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –∫—Ä–µ–ø–∫–æ–µ –∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –£–¥–∞—á–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è –≤–∞–º –ø–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –±–æ–∫–∞–ª–∞!"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏—è
@router.message(PremiumReadingStates.waiting_for_birthdate)
async def process_birthdate(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏—è"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    birthdate = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
    import re
    if not re.match(r'^\d{2}\.\d{2}\.\d{4}$', birthdate):
        await message.answer(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15.05.1990).",
            parse_mode="HTML"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(birthdate=birthdate)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    is_free_user = user_data.get('is_free_user', False)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    # –û–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ payment_handlers.py
    if not is_free_user:
        return
    
    # –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∞–¥–∞–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    await show_premium_reading_with_animation(message, birthdate)

async def show_premium_reading_with_animation(message: Message, birthdate: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–∞–¥–∞–Ω–∏—è
    await message.answer(
        "<b>üîÆ –ù–∞—á–∏–Ω–∞—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ...</b>",
        parse_mode="HTML"
    )
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–º-–≥–∞–¥–∞–Ω–∏–µ
    reading = await generate_premium_reading(birthdate)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(2)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç
    shuffling_msg = await message.answer(
        "<b>üÉè –ü–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>",
        parse_mode="HTML"
    )
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –ü–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞: {reading['cards'][0]['name']}</b>\n\n"
        f"{reading['cards'][0]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][0]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–æ–π
    await shuffling_msg.edit_text(
        "<b>üÉè –°–Ω–æ–≤–∞ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>",
        parse_mode="HTML"
    )
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ç–æ—Ä—É—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –í—Ç–æ—Ä–∞—è –∫–∞—Ä—Ç–∞: {reading['cards'][1]['name']}</b>\n\n"
        f"{reading['cards'][1]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][1]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –∫–∞—Ä—Ç –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ä—Ç–æ–π
    await shuffling_msg.edit_text(
        "<b>üÉè –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é –∫–∞—Ä—Ç—ã...</b>",
        parse_mode="HTML"
    )
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ç—Ä–µ—Ç—å–µ–π –∫–∞—Ä—Ç–æ–π
    await asyncio.sleep(3)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–µ—Ç—å—é –∫–∞—Ä—Ç—É
    await message.answer(
        f"<b>üÉè –¢—Ä–µ—Ç—å—è –∫–∞—Ä—Ç–∞: {reading['cards'][2]['name']}</b>\n\n"
        f"{reading['cards'][2]['description']}\n\n"
        f"<b>üç∏ –ê–ª–∫–æ–≥–æ–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:</b>\n{reading['cards'][2]['drunk_interpretation']}",
        parse_mode="HTML"
    )
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –≤–µ—Ä–¥–∏–∫—Ç–∞
    await shuffling_msg.edit_text(
        "<b>‚ú® –ü–æ–¥–¥–∞—é—Å—å –Ω–µ–±–µ—Å–∞–º –∏ –≥–æ—Ç–æ–≤–ª—é –≤–µ—Ä–¥–∏–∫—Ç...</b>",
        parse_mode="HTML"
    )
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –≤–µ—Ä–¥–∏–∫—Ç–æ–º
    await asyncio.sleep(4)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    await message.answer(
        f"<b>üîÆ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ:</b>\n\n{reading['personal_summary']}\n\n"
        f"<b>üåü –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n{reading['astrological_comment']}\n\n"
        f"<b>üç∏ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –Ω–∞–ø–∏—Ç–æ–∫:</b>\n{reading['recommended_drink']}",
        parse_mode="HTML"
    )

async def fetch_tarot_cards_gpt():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ —á–µ—Ä–µ–∑ ChatGPT API"""
